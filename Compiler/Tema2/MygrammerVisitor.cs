//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c:/Users/laurp/Desktop/Anul 2/LFC/Tema2/Tema2/Mygrammer.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="MygrammerParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface IMygrammerVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="MygrammerParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram([NotNull] MygrammerParser.ProgramContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MygrammerParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclaration([NotNull] MygrammerParser.DeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MygrammerParser.functionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionDeclaration([NotNull] MygrammerParser.FunctionDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MygrammerParser.parameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameterList([NotNull] MygrammerParser.ParameterListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MygrammerParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] MygrammerParser.StatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MygrammerParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlock([NotNull] MygrammerParser.BlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MygrammerParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfStatement([NotNull] MygrammerParser.IfStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MygrammerParser.whileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileStatement([NotNull] MygrammerParser.WhileStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MygrammerParser.forStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForStatement([NotNull] MygrammerParser.ForStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MygrammerParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturnStatement([NotNull] MygrammerParser.ReturnStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MygrammerParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionStatement([NotNull] MygrammerParser.ExpressionStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MygrammerParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] MygrammerParser.ExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MygrammerParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignment([NotNull] MygrammerParser.AssignmentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MygrammerParser.logicalOr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogicalOr([NotNull] MygrammerParser.LogicalOrContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MygrammerParser.logicalAnd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogicalAnd([NotNull] MygrammerParser.LogicalAndContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MygrammerParser.equality"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEquality([NotNull] MygrammerParser.EqualityContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MygrammerParser.comparison"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitComparison([NotNull] MygrammerParser.ComparisonContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MygrammerParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTerm([NotNull] MygrammerParser.TermContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MygrammerParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFactor([NotNull] MygrammerParser.FactorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MygrammerParser.unary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnary([NotNull] MygrammerParser.UnaryContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MygrammerParser.primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimary([NotNull] MygrammerParser.PrimaryContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MygrammerParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType([NotNull] MygrammerParser.TypeContext context);
}
